// <auto-generated />
using System;
using AcerShopBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AcerShopBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250422152537_photoAsByte")]
    partial class photoAsByte
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AcerShopBackend.Models.ChairDetails", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<string>("AdjustableFeatures")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adjustable_features");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("color");

                    b.Property<int?>("ComfortRating")
                        .HasColumnType("integer")
                        .HasColumnName("comfort_rating");

                    b.Property<string>("Dimensions")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("dimensions");

                    b.Property<string>("Material")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("material");

                    b.Property<int?>("WarrantyYears")
                        .HasColumnType("integer")
                        .HasColumnName("warranty_years");

                    b.Property<int?>("WeightCapacity")
                        .HasColumnType("integer")
                        .HasColumnName("weight_capacity");

                    b.HasKey("ProductId");

                    b.ToTable("chair_details");
                });

            modelBuilder.Entity("AcerShopBackend.Models.LaptopDetails", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<string>("BatteryLife")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("battery_life");

                    b.Property<string>("GraphicsCard")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("graphics_card");

                    b.Property<string>("OperatingSystem")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("operating_system");

                    b.Property<string>("Processor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("processor");

                    b.Property<string>("Ram")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("ram");

                    b.Property<string>("ScreenSize")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("screen_size");

                    b.Property<string>("StorageSize")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("storage_size");

                    b.Property<string>("Weight")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("weight");

                    b.HasKey("ProductId");

                    b.ToTable("laptop_details");
                });

            modelBuilder.Entity("AcerShopBackend.Models.MouseDetails", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int?>("Buttons")
                        .HasColumnType("integer")
                        .HasColumnName("buttons");

                    b.Property<string>("CompatibilityPlatforms")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("compatibility_platforms");

                    b.Property<string>("ConnectionType")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("connection_type");

                    b.Property<int?>("Dpi")
                        .HasColumnType("integer")
                        .HasColumnName("dpi");

                    b.Property<string>("ErgonomicDesign")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ergonomic_design");

                    b.Property<string>("SensitivityAdjustment")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("sensitivity_adjustment");

                    b.Property<string>("WirelessRange")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("wireless_range");

                    b.HasKey("ProductId");

                    b.ToTable("mouse_details");
                });

            modelBuilder.Entity("AcerShopBackend.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<byte[]>("Photo")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("photo");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(10, 2)")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("type_name");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AcerShopBackend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomRole")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("custom_role");

                    b.Property<string>("FirebaseUid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firebase_uid");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registration_date");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("AcerShopBackend.Models.UserCart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cart_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CartId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("CartId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("user_cart");
                });

            modelBuilder.Entity("AcerShopBackend.Models.ChairDetails", b =>
                {
                    b.HasOne("AcerShopBackend.Models.Product", "Product")
                        .WithOne("ChairDetails")
                        .HasForeignKey("AcerShopBackend.Models.ChairDetails", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AcerShopBackend.Models.LaptopDetails", b =>
                {
                    b.HasOne("AcerShopBackend.Models.Product", "Product")
                        .WithOne("LaptopDetails")
                        .HasForeignKey("AcerShopBackend.Models.LaptopDetails", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AcerShopBackend.Models.MouseDetails", b =>
                {
                    b.HasOne("AcerShopBackend.Models.Product", "Product")
                        .WithOne("MouseDetails")
                        .HasForeignKey("AcerShopBackend.Models.MouseDetails", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AcerShopBackend.Models.UserCart", b =>
                {
                    b.HasOne("AcerShopBackend.Models.Product", "Product")
                        .WithMany("UserCarts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcerShopBackend.Models.User", "User")
                        .WithMany("UserCarts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AcerShopBackend.Models.Product", b =>
                {
                    b.Navigation("ChairDetails");

                    b.Navigation("LaptopDetails");

                    b.Navigation("MouseDetails");

                    b.Navigation("UserCarts");
                });

            modelBuilder.Entity("AcerShopBackend.Models.User", b =>
                {
                    b.Navigation("UserCarts");
                });
#pragma warning restore 612, 618
        }
    }
}
